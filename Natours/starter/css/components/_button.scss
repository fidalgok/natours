//setup  extends for button styles
%btn-base {
  text-transform: uppercase;
  text-decoration: none;
  padding: 1.5rem 4rem;
  display: inline-block;
  border-radius: 10rem;
  transition: all 0.2s linear;
  position: relative;
}

.btn {
  &:link,
  &:visited {
    @extend %btn-base;
  }
  &:hover {
    transform: translateY(-0.3rem);
    box-shadow: 0 1rem 2rem rgba($color-black, 0.2);

    &::after {
      transform: scaleX(1.4) scaleY(1.6);
      opacity: 0;
    }
  }

  &:active {
    transform: translateY(-0.1rem);
    box-shadow: 0 0.5rem 1rem rgba($color-black, 0.2);
  }

  &--white {
    background-color: white;
    color: $color-grey-dark;

    &::after {
      background-color: $color-white;
    }
  }

  &--green {
    background-color: $medium-green;
    color: $color-white;
    &::after {
      background-color: $medium-green;
    }
  }
  /**
  creating a psuedo element
*/
  &::after {
    content: '';
    display: inline-block;
    height: 100%;
    width: 100%;
    border-radius: 10rem;
    position: absolute;
    top: 0;
    left: 0;
    z-index: -1;
    transition: all 0.4s linear;
  }

  &--animated {
    animation: moveInBottom 0.5s ease-in 1s;
    animation-fill-mode: backwards;
  }
}

.btn-text {
  &:link,
  &:visited {
    font-size: $default-font-size;
    color: $dark-green;
    display: inline-block;
    text-decoration: none;
    border-bottom: 1px solid $dark-green;
    padding: 5px;
    transition: all 0.2s;
    align-self: flex-start;
  }

  &:hover {
    background-color: $dark-green;
    background-image: linear-gradient(
      to right,
      rgba($dark-green, 0.8),
      rgba($light-green, 0.8)
    );
    color: $color-white;
    box-shadow: 0 1rem 2rem rgba($color-black, 0.15);
    transform: translate(0 -2px);
  }

  &:active {
    box-shadow: 0 0.5rem 1rem rgba($color-black, 0.15);
    transform: translate(0 0);
  }
}
